AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: JVM Template Lambda Functions

Parameters:
  DevSuffix:
    Type: String
    Default: ''

Resources:

# Lambdas
  GetGearListHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName:
        !Join
          - ""
          - - Caampr-GetGearList
            - !Ref DevSuffix
      Handler: com.jelistan.caampr.lambda.dagger.InvocationHandlers::handleGetGearListRequest
      Runtime: java8
      Description: Fetches the gear list for a provided profile
      MemorySize: 512
      Timeout: 60
      CodeUri: ../build/distributions/caampr-backend-1.0-SNAPSHOT.zip
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          ROLE_NAME: !Ref LambdaRole
          ACCOUNT_ID: !Ref AWS::AccountId
          REGION: !Ref AWS::Region

  LambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        !Join
          - ""
          - - LambdaRole
            - !Ref DevSuffix
      ManagedPolicyArns:
        - !Ref GearDDBAccessManagedPolicy
        - !Ref UserDDBAccessManagedPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName:
            !Join
              - ""
              - - allow-lambda-to-use-logs-policy
                - !Ref DevSuffix
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

# DynamoDB Resources
  GearTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Gear-v2
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "type"
          AttributeType: "S"
        - AttributeName: "profileId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        - AttributeName: "type"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: "gear-by-profile"
          KeySchema:
            - AttributeName: "profileId"
              KeyType: "HASH"
            - AttributeName: "type"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
      Tags:
        - Key: TableName
          Value: Gear
        - Key: Project
          Value: cammpr

  ListTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Lists-v1
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "listId"
          AttributeType: "S"
        - AttributeName: "profileId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "gear-by-profile"
          KeySchema:
            - AttributeName: "profileId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
      Tags:
        - Key: TableName
          Value: Lists
        - Key: Project
          Value: cammpr

  TagTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Tags-v1
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "name"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "name"
          KeyType: "HASH"
      Tags:
        - Key: TableName
          Value: Tags
        - Key: Project
          Value: cammpr

  UserTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: Users-v1
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "profileId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "profileId"
          KeyType: "HASH"
      Tags:
        - Key: TableName
          Value: User
        - Key: Project
          Value: cammpr

# IAM Resources
  GearDDBAccessManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GearDDBAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:GetItem'
            Resource:
              - !GetAtt GearTable.Arn
              - !Join [ '/', [ !GetAtt GearTable.Arn, 'index/*' ] ]

  ListDDBAccessManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: ListDDBAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:GetItem'
            Resource:
              - !GetAtt ListTable.Arn
              - !Join [ '/', [ !GetAtt ListTable.Arn, 'index/*' ] ]

  TagDDBAccessManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TagDDBAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:GetItem'
            Resource:
              - !GetAtt TagTable.Arn
              - !Join [ '/', [ !GetAtt TagTable.Arn, 'index/*' ] ]

  UserDDBAccessManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: UserDDBAccess
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'dynamodb:UpdateItem'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:PutItem'
              - 'dynamodb:DeleteItem'
              - 'dynamodb:GetItem'
            Resource:
              - !GetAtt UserTable.Arn
              - !Join [ '/', [ !GetAtt UserTable.Arn, 'index/*' ] ]